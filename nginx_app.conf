server {
    listen 80;
    server_name greg-office.tplinkdns.com;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server {
    listen 443 ssl;
    server_name greg-office.tplinkdns.com;
    server_tokens off;
    client_max_body_size 2G; 
    proxy_request_buffering off;

    error_page 404 /custom_404.html;

    location = /custom_404.html {
       root /usr/share/nginx/html;
       internal;
    }

    location = /favicon.ico {
       root /usr/share/nginx/html;
    }

    ssl_certificate /etc/letsencrypt/live/greg-office.tplinkdns.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/greg-office.tplinkdns.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location /smarthome/api/v1/ {
      proxy_pass           http://smart-home:8080/api/v1/;
      proxy_set_header     Host               $host;
      proxy_set_header     X-Real-IP          $remote_addr;
      proxy_set_header     X-Forwarded-For    $proxy_add_x_forwarded_for;
      proxy_set_header     X-Access-Token     $http_x_access_token;
    }

    location /smarthome/entryform/ {
        root /var/www;
    }

    location /grafana/ {
      proxy_pass           http://grafana:3000;
      proxy_set_header     Host               $host;
      proxy_set_header     X-Real-IP          $remote_addr;
      proxy_set_header     X-Forwarded-For    $proxy_add_x_forwarded_for;
    }

    location /grafana/api/live {
      rewrite  ^/grafana/(.*)  /$1 break;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $http_host;
      proxy_pass http://grafana:3000/;
    }
    
    location /prometheus/ {
      proxy_http_version 1.1;
      if ($http_authorization != "Bearer 3465c304-c26f-11ed-afa1-0242ac120002") {
         return 401;
      }
      proxy_pass           http://prometheus:9090/prometheus/;
      proxy_set_header     Host               $host;
      proxy_set_header     X-Real-IP          $remote_addr;
      proxy_set_header     X-Forwarded-For    $proxy_add_x_forwarded_for;
    }

    location /nc/ {
      rewrite  ^/nc/(.*)  /$1 break;
      proxy_pass http://next-cloud/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # WebSocket support for real-time communication
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';

      # Timeout settings (can be adjusted as needed)
      proxy_read_timeout 3600;
      proxy_redirect off;
    }

}
